// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package fixtures;
option go_package = "github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/collector/internal/integrationtest";

import "metric_service.proto";

message MetricExpectFixture {
  repeated google.monitoring.v3.CreateTimeSeriesRequest create_time_series_requests = 1;
  repeated google.monitoring.v3.CreateMetricDescriptorRequest create_metric_descriptor_requests = 2;
  repeated google.monitoring.v3.CreateTimeSeriesRequest create_service_time_series_requests = 3;
  repeated SelfObservabilityMetric self_observability_metrics = 4;
}

message SelfObservabilityMetric {
  // metric name
  string name = 1;

  // Copied from
  // https://github.com/googleapis/googleapis/blob/ab1bf9a5cef888843afb9ef3b70b79587d9a033b/google/api/metric.proto
  enum MetricKind {
    METRIC_KIND_UNSPECIFIED = 0;
    GAUGE = 1;
    DELTA = 2;
    CUMULATIVE = 3;
  }
  // The GCM MetricKind that the metric would create
  MetricKind metric_kind = 2;

  // A slimmed down explicit bucketed histogram
  message Histogram {
    double sum = 1;
    int64 count = 2;
    repeated double bucket_bounds = 3;
    repeated int64 bucket_counts = 4;
  }

  oneof value {
    int64 int64_value = 5;
    double float64_value = 6;
    Histogram histogram_value = 7;
  };
  // stringified labels
  map<string, string> labels = 3;
}
